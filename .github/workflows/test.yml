name: Test
on:
  workflow_call:
    inputs:
      host-os:
        required: false
        type: string
        default: ubuntu-22.04
      ack:
        required: true
        type: string
      arch:
        required: true
        type: string
      version:
        required: true
        type: string
      artifact-dir:
        required: true
        type: string
      kernel-image-name:
        required: true
        type: string
      suffix:
        required: true
        type: string
      
jobs:
  test:
    name: Test (ack=${{ inputs.ack }}, ${{ inputs.version }}, ${{ inputs.arch }})
    runs-on: ubuntu-22.04
    # Put ACK and ARCH in the environment so it's picked up by the `make` commands
    env:
      ACK: ${{ inputs.ack }}
      ARCH: ${{ inputs.arch }}
    steps:
    - uses: actions/checkout@v4

    - name: Download kernel artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-dir }}
        path: ${{ inputs.artifact-dir }}

    - name: Download rootfs artifacts
      uses: actions/download-artifact@v4
      with:
        name: rootfs-${{ inputs.arch }}
        path: rootfs

    - run: ls -lR

    - name: Install x86_64 dependencies
      if: ${{ inputs.arch == 'x86_64' }}
      run: sudo apt update && sudo apt install -y qemu-system-x86

    - name: Install arm64 dependencies
      if: ${{ inputs.arch == 'arm64' }}
      run: sudo apt update && sudo apt install -y qemu-system-arm

    - name: Setup shared/init.sh
      run: |
        mkdir shared
        echo poweroff > shared/init.sh
        chmod +x shared/init.sh

    - name: Run kernel
      run: |
        export QEMU_KERNEL_IMAGE=${{ inputs.artifact-dir }}/${{ inputs.kernel-image-name }}-${{ inputs.suffix }}
        
        ALPINE_ROOTFS=alpine-${{ inputs.arch }}.img
        UBUNTU_ROOTFS=ubuntu-jammy-${{ inputs.arch }}.img
        UBUNTU_CPIO=ubuntu-jammy-${{ inputs.arch }}.cpio.gz
        
        cp ./rootfs/${ALPINE_ROOTFS} ./${ALPINE_ROOTFS}
        cp ./rootfs/${UBUNTU_CPIO} ./${UBUNTU_CPIO}

        # Run with default alpine rootfs
        make run

        # Run with ubuntu rootfs
        ROOTFS=./rootfs/${UBUNTU_ROOTFS} make run

        # Run with default alpine cpio
        INITRD=1 make run

        # Run with ubuntu cpio in non-standard location
        INITRD=./${UBUNTU_CPIO} make run

        # Run with alpine rootfs in non-standard location, with additional options
        CPU=2 MEM=2048M QEMU_EXTRA_ARGS="" QEMU_EXTRA_KERNEL_CMDLINE="nokaslr" ROOTFS=./${ALPINE_ROOTFS} make run
